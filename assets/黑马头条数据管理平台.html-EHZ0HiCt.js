import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-dieZJCkT.js";const p="/Blog/assets/image-20231222172712452-sYr5onp3.png",e="/Blog/assets/image-20231225091839283-rD8ivOBO.png",o={},c=t(`<h1 id="黑马头条数据管理平台" tabindex="-1"><a class="header-anchor" href="#黑马头条数据管理平台" aria-hidden="true">#</a> 黑马头条数据管理平台</h1><h2 id="项目简介" tabindex="-1"><a class="header-anchor" href="#项目简介" aria-hidden="true">#</a> 项目简介</h2><h3 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍</h3><p>对移动网站的数据进行数据管理</p><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h3><ol><li>登录和权限判断</li><li>查看文章内容列表（筛选、分页）</li><li>编辑文章（数据回显）</li><li>删除文章</li><li>发布文章（图片上传，富文本编辑器）</li></ol><h3 id="技术" tabindex="-1"><a class="header-anchor" href="#技术" aria-hidden="true">#</a> 技术</h3><ul><li>基于 Bootstrap 搭建网站标签和样式</li><li>集成 wangEditor 插件实现富文本编辑器</li><li>使用原生 JavaScript 完成增删改查等业务</li><li>基于 axios 与黑马头条线上接口交互</li><li>使用 axios 拦截器进行权限判断</li></ul><h3 id="文件结构" tabindex="-1"><a class="header-anchor" href="#文件结构" aria-hidden="true">#</a> 文件结构</h3><p>开始前，先认识一下文件结构</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>├── assets
├── lib
├── page
│   ├── content
│   │   ├── index.css
│   │   ├── index.html
│   │   └── index.js
│   ├── login
│   └── publish
└── utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>assets：资源文件夹（图片、字体等）</li><li>lib：资料文件夹（第三方插件，如：form-serialize）</li><li>page：页面文件夹</li><li>utils：实用程序文件夹（工具插件）</li></ul><h2 id="登录页" tabindex="-1"><a class="header-anchor" href="#登录页" aria-hidden="true">#</a> 登录页</h2><h3 id="验证码登录" tabindex="-1"><a class="header-anchor" href="#验证码登录" aria-hidden="true">#</a> 验证码登录</h3><h4 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h4><p>完成验证码登录，后端设置验证码默认为246810</p><h4 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h4><ol><li>在 <code>utils/request.js</code> 配置 axios 请求 <strong>基地址</strong> （这样做之后，配置 axios 请求时直接写后半段地址就可以了）</li><li>收集手机号和验证码数据</li><li>基于 axios 调用验证码登录接口</li><li>使用 Bootstrap 的 Alert 警告框反馈结果给用户</li></ol><h4 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h4><ol><li>配置 axios 公共请求</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/request.js</span>

axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">&#39;http://geek.itheima.net&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>完成验证码登录逻辑</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/login/index.js</span>

<span class="token keyword">const</span> loginBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.btn&#39;</span><span class="token punctuation">)</span>
loginBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.login-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>form<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/authorizations&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    data
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">myAlert</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;登陆成功&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">myAlert</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="知识补充-验证码登录流程" tabindex="-1"><a class="header-anchor" href="#知识补充-验证码登录流程" aria-hidden="true">#</a> 知识补充 - 验证码登录流程</h3><p>一图读懂验证码登录流程</p><p><img src="`+p+'" alt="image-20231222172712452" loading="lazy"></p><h3 id="知识补充-token" tabindex="-1"><a class="header-anchor" href="#知识补充-token" aria-hidden="true">#</a> 知识补充 - token</h3><p>概念：访问权限的令牌，本质上是一串字符串</p><p>作用：主要进行判断是否有登录状态，控制访问权限</p><p><img src="'+e+`" alt="image-20231225091839283" loading="lazy"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>前端只能判断 token 有无</p><p>后端才能判断 token 的有效性</p></div><h3 id="token-的使用" tabindex="-1"><a class="header-anchor" href="#token-的使用" aria-hidden="true">#</a> token 的使用</h3><h4 id="目标-1" tabindex="-1"><a class="header-anchor" href="#目标-1" aria-hidden="true">#</a> 目标</h4><p>只有登录状态，才可以访问内容页面</p><h4 id="步骤-1" tabindex="-1"><a class="header-anchor" href="#步骤-1" aria-hidden="true">#</a> 步骤</h4><ol><li>在 utils / auth.js 中判断无 token 令牌字符串，则强制跳转到登录页（手动修改地址栏测试）</li><li>在登录成功后，保存 token 令牌字符串到本地，再跳转到首页（手动修改地址栏测试）</li></ol><h4 id="代码实现-1" tabindex="-1"><a class="header-anchor" href="#代码实现-1" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/auth.js</span>

<span class="token keyword">const</span> token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;../login/index.html&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/login/index.js</span>

loginBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token comment">// 登陆成功</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span>
  	<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;../content/index.html&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显示用户名" tabindex="-1"><a class="header-anchor" href="#显示用户名" aria-hidden="true">#</a> 显示用户名</h2><h3 id="设置个人信息" tabindex="-1"><a class="header-anchor" href="#设置个人信息" aria-hidden="true">#</a> 设置个人信息</h3><h4 id="需求" tabindex="-1"><a class="header-anchor" href="#需求" aria-hidden="true">#</a> 需求</h4><p>设置用户昵称</p><h4 id="步骤-2" tabindex="-1"><a class="header-anchor" href="#步骤-2" aria-hidden="true">#</a> 步骤</h4><ol><li>在 utils/request.js 设置请求拦截器，统一携带 token</li><li>请求个人信息并设置到页面</li></ol><h4 id="代码实现-2" tabindex="-1"><a class="header-anchor" href="#代码实现-2" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/request.js</span>

<span class="token comment">// 请求拦截器</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
  token <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/auth.js</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/user/profile&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> username <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.nick-name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> username
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优化-axios-拦截器" tabindex="-1"><a class="header-anchor" href="#优化-axios-拦截器" aria-hidden="true">#</a> 优化 axios 拦截器</h3><h4 id="需求-1" tabindex="-1"><a class="header-anchor" href="#需求-1" aria-hidden="true">#</a> 需求</h4><p>响应回到 then/catch 之前，触发的拦截函数，对响应结果进行统一处理</p><h4 id="代码实现-3" tabindex="-1"><a class="header-anchor" href="#代码实现-3" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/request.js</span>

<span class="token comment">// 添加响应拦截器</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> response
<span class="token punctuation">}</span>， <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token operator">?.</span>response<span class="token operator">?.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;身份验证失败，请重新登录&#39;</span><span class="token punctuation">)</span>
    localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  	location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;../login/index.html&#39;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优化-axios-响应结果" tabindex="-1"><a class="header-anchor" href="#优化-axios-响应结果" aria-hidden="true">#</a> 优化 axios 响应结果</h3><h4 id="需求-2" tabindex="-1"><a class="header-anchor" href="#需求-2" aria-hidden="true">#</a> 需求</h4><p>axios 直接接收服务器返回的响应结果</p><h4 id="代码实现-4" tabindex="-1"><a class="header-anchor" href="#代码实现-4" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// urils/request.js</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样写了以后，后面就不再需要 <code>result.data.data.name</code> 这样取值了，而是更改为</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/auth.js</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> username <span class="token operator">=</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/login/index.js</span>

loginBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布文章" tabindex="-1"><a class="header-anchor" href="#发布文章" aria-hidden="true">#</a> 发布文章</h2><h3 id="富文本编辑器" tabindex="-1"><a class="header-anchor" href="#富文本编辑器" aria-hidden="true">#</a> 富文本编辑器</h3><p>富文本：带样式，多格式的文本，在前端一般使用标签配合内联样式实现</p><p>富文本编辑器：用于编写富文本内容的容器</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h4><p>使用 wangEditor 插件</p><h4 id="步骤-3" tabindex="-1"><a class="header-anchor" href="#步骤-3" aria-hidden="true">#</a> 步骤</h4><ol><li>引入CSS定义样式</li><li>定义HTML结构</li><li>引入JS创建编辑器</li><li>监听内容改变，保存在隐藏文本域（便于后期收集）</li></ol><h4 id="代码实现-5" tabindex="-1"><a class="header-anchor" href="#代码实现-5" aria-hidden="true">#</a> 代码实现</h4><ol><li>引入CSS样式</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 富文本编辑器 */</span>
<span class="token selector">#editor—wrapper</span> <span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span> <span class="token comment">/* 按需定义 */</span>
<span class="token punctuation">}</span>
<span class="token selector">#toolbar-container</span> <span class="token punctuation">{</span> <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">#editor-container</span> <span class="token punctuation">{</span> <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>定义HTML结构</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>内容：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 富文本编辑器位置 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>editor—wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toolbar-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 工具栏 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>editor-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 编辑器 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 记录富文本内容-用于表单收集 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>publish-content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>引入JS编辑器</li><li>监听内容改变，保存在隐藏文本域（便于后期收集）</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 解构赋值</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> createEditor<span class="token punctuation">,</span> createToolbar <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>wangEditor

<span class="token comment">// 编辑器配置对象</span>
<span class="token keyword">const</span> editorConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 占位提示文字</span>
  <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&#39;发布文章内容...&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 编辑器变化时回调函数</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">editor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取富文本的内容</span>
    <span class="token keyword">const</span> html <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;editor content&#39;</span><span class="token punctuation">,</span> html<span class="token punctuation">)</span>
    <span class="token comment">// 也可以同步到 &lt;textarea&gt;</span>
    <span class="token comment">// 为了后续快速收集整个表单内容做铺垫</span>
    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.publish-content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> html
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 创建编辑器</span>
<span class="token keyword">const</span> editor <span class="token operator">=</span> <span class="token function">createEditor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 创建位置</span>
  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">&#39;#editor-container&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 默认内容</span>
  <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">&#39;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 配置项</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> editorConfig<span class="token punctuation">,</span>
  <span class="token comment">// 配置集成模式(default 全部) (simple 简介)</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span> <span class="token comment">// or &#39;simple&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 工具栏配置对象</span>
<span class="token keyword">const</span> toolbarConfig <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// 创建工具栏</span>
<span class="token keyword">const</span> toolbar <span class="token operator">=</span> <span class="token function">createToolbar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 为指定编辑器创建工具栏</span>
  editor<span class="token punctuation">,</span>
  <span class="token comment">// 工具栏创建的位置</span>
  <span class="token literal-property property">selector</span><span class="token operator">:</span> <span class="token string">&#39;#toolbar-container&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// 工具栏配置对象</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> toolbarConfig<span class="token punctuation">,</span>
  <span class="token comment">// 配置集成模式</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span> <span class="token comment">// or &#39;simple&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="频道列表" tabindex="-1"><a class="header-anchor" href="#频道列表" aria-hidden="true">#</a> 频道列表</h3><h4 id="目标-2" tabindex="-1"><a class="header-anchor" href="#目标-2" aria-hidden="true">#</a> 目标</h4><p>展示频道列表，供用户选择</p><h4 id="步骤-4" tabindex="-1"><a class="header-anchor" href="#步骤-4" aria-hidden="true">#</a> 步骤</h4><ol><li>获取频道列表数据</li><li>展示到下拉菜单中</li></ol><h4 id="代码实现-6" tabindex="-1"><a class="header-anchor" href="#代码实现-6" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setChannelList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/channels&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;option value=&quot;&quot; selected=&quot;&quot;&gt;请选择文章频道&lt;/option&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>channels<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;option value=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/option&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.form-select&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> htmlStr
<span class="token punctuation">}</span>
<span class="token function">setChannelList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="封面设置" tabindex="-1"><a class="header-anchor" href="#封面设置" aria-hidden="true">#</a> 封面设置</h3><h4 id="目标-3" tabindex="-1"><a class="header-anchor" href="#目标-3" aria-hidden="true">#</a> 目标</h4><p>文章封面的设置</p><h4 id="步骤-5" tabindex="-1"><a class="header-anchor" href="#步骤-5" aria-hidden="true">#</a> 步骤</h4><ol><li>准备标签结构和样式</li><li>选择文件并保存在 FormData</li><li>单独上传图片并得到图片 URL 地址</li><li>回显并切换 img 标签展示（隐藏+号上传标签）</li></ol><div class="hint-container warning"><p class="hint-container-title">注意</p><p>图片地址临时存储在 img 标签上，并未和文章关联保存</p></div><h4 id="代码实现-7" tabindex="-1"><a class="header-anchor" href="#代码实现-7" aria-hidden="true">#</a> 代码实现</h4><ol><li>准备标签结构和样式</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 封面 */</span>
<span class="token selector">.cover .place</span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #aaa<span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.cover img</span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.cover .rounded</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.cover .show</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.cover .hide</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>选择文件并保存 FormData</li><li>单独上传图片并得到图片 URL 地址</li><li>回显并切换 img 标签展示（隐藏+号上传标签）</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> rounded <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.rounded&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> imgFile <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.img-file&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> place <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.place&#39;</span><span class="token punctuation">)</span>

imgFile<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> fd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  fd<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/upload&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> fd
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> imgUrl <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url
  rounded<span class="token punctuation">.</span>src <span class="token operator">=</span> imgUrl
  rounded<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;show&#39;</span><span class="token punctuation">)</span>
  place<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
rounded<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  imgFile<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="收集并保存" tabindex="-1"><a class="header-anchor" href="#收集并保存" aria-hidden="true">#</a> 收集并保存</h3><h4 id="目标-4" tabindex="-1"><a class="header-anchor" href="#目标-4" aria-hidden="true">#</a> 目标</h4><p>收集文章内容，并提交保存</p><h4 id="步骤-6" tabindex="-1"><a class="header-anchor" href="#步骤-6" aria-hidden="true">#</a> 步骤</h4><ol><li>基于 form-serialize 插件收集表单数据对象</li><li>基于 axios 提交到服务器保存</li><li>调用 Alert 警告框反馈结果给用户</li><li>重置表单并跳转到列表页</li></ol><h4 id="代码实现-8" tabindex="-1"><a class="header-anchor" href="#代码实现-8" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.send&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.art-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>form<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">delete</span> data<span class="token punctuation">.</span>id
  data<span class="token punctuation">.</span>cover <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 封面类型</span>
    <span class="token literal-property property">images</span><span class="token operator">:</span> <span class="token punctuation">[</span>rounded<span class="token punctuation">.</span>src<span class="token punctuation">]</span> <span class="token comment">// 封面图片 URL 网址</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/mp/articles&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
      data
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">myAlert</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;发布成功&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// 发布完成后清空</span>
    form<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    rounded<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    rounded<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;show&#39;</span><span class="token punctuation">)</span>
    place<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">)</span>
    editor<span class="token punctuation">.</span><span class="token function">setHtml</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;../content/index.html&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">myAlert</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内容管理" tabindex="-1"><a class="header-anchor" href="#内容管理" aria-hidden="true">#</a> 内容管理</h2><h3 id="文章列表展示" tabindex="-1"><a class="header-anchor" href="#文章列表展示" aria-hidden="true">#</a> 文章列表展示</h3><h4 id="目标-5" tabindex="-1"><a class="header-anchor" href="#目标-5" aria-hidden="true">#</a> 目标</h4><p>获取文章列表并展示</p><h4 id="步骤-7" tabindex="-1"><a class="header-anchor" href="#步骤-7" aria-hidden="true">#</a> 步骤</h4><ol><li>准备查询参数对象</li><li>获取文章列表数据</li><li>展示到指定的标签结构中</li></ol><h4 id="代码实现-9" tabindex="-1"><a class="header-anchor" href="#代码实现-9" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/content/index.js</span>

<span class="token keyword">const</span> queryObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文章状态(1-待审核, 2-审核通过) 空字符串 - 全部</span>
  <span class="token literal-property property">channel_id</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文章频道 id, 空字符串 - 全部</span>
  <span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 当前页码</span>
  <span class="token literal-property property">per_page</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token comment">// 当前页面条数</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setArtileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/mp/articles&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">params</span><span class="token operator">:</span> queryObj
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> htmlStr <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;tr&gt;
      &lt;td&gt;
        &lt;img alt=&quot;&quot; src=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>cover<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://img2.baidu.com/it/u=2640406343,1419332367&amp;amp;fm=253&amp;amp;fmt=auto&amp;amp;app=138&amp;amp;f=JPEG?w=708&amp;amp;h=500</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> item<span class="token punctuation">.</span>cover<span class="token punctuation">.</span>images<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
      &lt;/td&gt;
      &lt;td&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/td&gt;
      &lt;td&gt;
        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;span class=&quot;badge text-bg-primary&quot;&gt;待审核&lt;/span&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;span class=&quot;badge text-bg-success&quot;&gt;审核通过&lt;/span&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      &lt;/td&gt;
      &lt;td&gt;
        &lt;span&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>pubdate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;span&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>read_count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;span&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>comment_count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;span&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>like_count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
      &lt;/td&gt;
      &lt;td&gt;
        &lt;i class=&quot;bi bi-pencil-square edit&quot;&gt;&lt;/i&gt;
        &lt;i class=&quot;bi bi-trash3 del&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>htmlStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.art-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> htmlStr
<span class="token punctuation">}</span>
<span class="token function">setArtileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="筛选功能" tabindex="-1"><a class="header-anchor" href="#筛选功能" aria-hidden="true">#</a> 筛选功能</h3><h4 id="目标-6" tabindex="-1"><a class="header-anchor" href="#目标-6" aria-hidden="true">#</a> 目标</h4><p>根据筛选条件，获取匹配数据展示</p><h4 id="步骤-8" tabindex="-1"><a class="header-anchor" href="#步骤-8" aria-hidden="true">#</a> 步骤</h4><ol><li>设置频道列表数据</li><li>监听筛选条件改变，保存查询信息到查询参数对象</li><li>点击筛选时，传递查询参数对象到服务器</li><li>获取匹配数据，覆盖到页面展示</li></ol><h4 id="代码实现-10" tabindex="-1"><a class="header-anchor" href="#代码实现-10" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/content/index.js</span>

<span class="token keyword">const</span> formSelect <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.form-select&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setChannelList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/v1_0/channels&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> htmlStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;option value=&quot;&quot; selected=&quot;&quot;&gt;请选择文章频道&lt;/option&gt;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>channels<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;option value=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/option&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  formSelect<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> htmlStr
<span class="token punctuation">}</span>
<span class="token function">setChannelList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 筛选状态</span>
document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.form-check-input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">radio</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  radio<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    queryObj<span class="token punctuation">.</span>status <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

formSelect<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  queryObj<span class="token punctuation">.</span>channel_id <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> selBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.sel-btn&#39;</span><span class="token punctuation">)</span>
selBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setArtileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分页功能" tabindex="-1"><a class="header-anchor" href="#分页功能" aria-hidden="true">#</a> 分页功能</h3><h4 id="目标-7" tabindex="-1"><a class="header-anchor" href="#目标-7" aria-hidden="true">#</a> 目标</h4><p>完成文章列表，分页管理功能</p><h4 id="步骤-9" tabindex="-1"><a class="header-anchor" href="#步骤-9" aria-hidden="true">#</a> 步骤</h4><ol><li>保存并设置文章总条数</li><li>点击下一页，做临界值判断，并切换页码参数请求最新数据</li><li>点击上一页，做临界值判断，并切换页码参数请求最新数据</li></ol><h4 id="代码实现-11" tabindex="-1"><a class="header-anchor" href="#代码实现-11" aria-hidden="true">#</a> 代码实现</h4><div class="language-JS line-numbers-mode" data-ext="JS"><pre class="language-JS"><code>// page/content/index.js

let totalCount = 0

async function setArtileList() {
  ...
  totalCount = res.data.total_count
  document.querySelector(&#39;.total-count&#39;).innerHTML = \`共 \${totalCount} 页\`
}

const pageNow = document.querySelector(&#39;.page-now&#39;)
document.querySelector(&#39;.next&#39;).addEventListener(&#39;click&#39;, e =&gt; {
  if (queryObj.page &lt; Math.ceil(totalCount / queryObj.per_page)) {
    queryObj.page++
    pageNow.innerHTML = \`第\${queryObj.page}页\`
    setArtileList()
  }
})
document.querySelector(&#39;.last&#39;).addEventListener(&#39;click&#39;, e =&gt; {
  if (queryObj.page &gt; 1) {
    queryObj.page--
    pageNow.innerHTML = \`第\${queryObj.page}页\`
    setArtileList()
  }
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除功能" tabindex="-1"><a class="header-anchor" href="#删除功能" aria-hidden="true">#</a> 删除功能</h3><h4 id="目标-8" tabindex="-1"><a class="header-anchor" href="#目标-8" aria-hidden="true">#</a> 目标</h4><p>完成删除文章功能</p><h4 id="步骤-10" tabindex="-1"><a class="header-anchor" href="#步骤-10" aria-hidden="true">#</a> 步骤</h4><ol><li>关联文章 id 到删除图表</li><li>点击删除时，获取文章 id</li><li>调用删除接口，传递文章 id 到服务器</li><li>重新获取文章列表，并覆盖展示</li></ol><h4 id="代码实现-12" tabindex="-1"><a class="header-anchor" href="#代码实现-12" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/content/index.js</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setArtileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">const</span> htmlStr <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>results<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
		&lt;tr&gt;
			...
			&lt;td data-id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
        &lt;i class=&quot;bi bi-pencil-square edit&quot;&gt;&lt;/i&gt;
        &lt;i class=&quot;bi bi-trash3 del&quot;&gt;&lt;/i&gt;
      &lt;/td&gt;
		&lt;/tr&gt;
	</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.art-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;del&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> delId <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/v1_0/mp/articles/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>delId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;delete&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">setArtileList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除最后一条" tabindex="-1"><a class="header-anchor" href="#删除最后一条" aria-hidden="true">#</a> 删除最后一条</h3><h4 id="目标-9" tabindex="-1"><a class="header-anchor" href="#目标-9" aria-hidden="true">#</a> 目标</h4><p>在删除最后一页，最后一条时有 Bug</p><h4 id="解决" tabindex="-1"><a class="header-anchor" href="#解决" aria-hidden="true">#</a> 解决</h4><ol><li>删除成功时，判断 DOM 元素只剩一条，让当前页码 page--</li><li>注意，当前页码为 1 时不能继续向前翻页</li><li>重新设置页码数，获取最新列表展示</li></ol><h4 id="代码实现-13" tabindex="-1"><a class="header-anchor" href="#代码实现-13" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/content.index.js</span>

<span class="token keyword">const</span> artList <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.art-list&#39;</span><span class="token punctuation">)</span>
artList<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> artList<span class="token punctuation">.</span>children
  <span class="token keyword">if</span> <span class="token punctuation">(</span>children<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> queryObj<span class="token punctuation">.</span>page <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queryObj<span class="token punctuation">.</span>page<span class="token operator">--</span>
    pageNow<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">第 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>queryObj<span class="token punctuation">.</span>page<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 页</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编辑文章-回显" tabindex="-1"><a class="header-anchor" href="#编辑文章-回显" aria-hidden="true">#</a> 编辑文章 - 回显</h3><h4 id="目标-10" tabindex="-1"><a class="header-anchor" href="#目标-10" aria-hidden="true">#</a> 目标</h4><p>编辑文章时，回显数据到表单</p><h4 id="步骤-11" tabindex="-1"><a class="header-anchor" href="#步骤-11" aria-hidden="true">#</a> 步骤</h4><ol><li>页面跳转传参(URL 查询参数方式)</li><li>发布文章页面接收参数判断(共用同一套表单)</li><li>修改标题和按钮文字</li><li>获取文章详情数据并回显表单</li></ol><h4 id="代码实现-14" tabindex="-1"><a class="header-anchor" href="#代码实现-14" aria-hidden="true">#</a> 代码实现</h4><ol><li>页面跳转传参</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/content/index.js</span>

artList<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> artId <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>id
    location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">../publish/index.html?id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>artId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>发布文章页面接收参数判断(共用同一套表单)</li><li>修改标题和按钮文字</li><li>获取文章详情数据并回显表单</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/publish/index.js</span>

<span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> paramsStr <span class="token operator">=</span> location<span class="token punctuation">.</span>search
    <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>paramsStr<span class="token punctuation">)</span>
    params<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 当前有要编辑的文章 id 被传入对象</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.title span&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;修改文章&#39;</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.send&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;修改&#39;</span>

        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/v1_0/mp/articles/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> dataObj <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">channel_id</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>channel_id<span class="token punctuation">,</span>
          <span class="token literal-property property">title</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
          <span class="token literal-property property">rounded</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>cover<span class="token punctuation">.</span>images<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">content</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>content<span class="token punctuation">,</span>
          <span class="token literal-property property">id</span><span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id
        <span class="token punctuation">}</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>dataObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;rounded&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 封面设置 有封面的情况下</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>dataObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              rounded<span class="token punctuation">.</span>src <span class="token operator">=</span> dataObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
              rounded<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;show&#39;</span><span class="token punctuation">)</span>
              place<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;hide&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 富文本内容</span>
            editor<span class="token punctuation">.</span><span class="token function">setHtml</span><span class="token punctuation">(</span>dataObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 用数据对象属性名，作为标签 name 属性选择器值来找到匹配的标签</span>
            document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[name=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> dataObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编辑文章-保存" tabindex="-1"><a class="header-anchor" href="#编辑文章-保存" aria-hidden="true">#</a> 编辑文章 - 保存</h3><h4 id="目标-11" tabindex="-1"><a class="header-anchor" href="#目标-11" aria-hidden="true">#</a> 目标</h4><p>确认修改，保存文章到服务器</p><h4 id="步骤-12" tabindex="-1"><a class="header-anchor" href="#步骤-12" aria-hidden="true">#</a> 步骤</h4><ol><li>判断按钮文字，区分业务（因为共用一套表单）</li><li>调用编辑文章接口，保存信息到服务器</li><li>基于 Alert 反馈结果消息给用户</li></ol><h4 id="代码实现-15" tabindex="-1"><a class="header-anchor" href="#代码实现-15" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/publish/index.js</span>

<span class="token keyword">const</span> send <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.send&#39;</span><span class="token punctuation">)</span>
send<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML <span class="token operator">!==</span> <span class="token string">&#39;发布&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

send<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML <span class="token operator">!==</span> <span class="token string">&#39;修改&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.art-form&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span>form<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">empty</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/v1_0/mp/articles/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>data<span class="token punctuation">,</span>
        <span class="token literal-property property">cover</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> rounded<span class="token punctuation">.</span>src <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token literal-property property">images</span><span class="token operator">:</span> <span class="token punctuation">[</span>rounded<span class="token punctuation">.</span>src<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token function">myAlert</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;修改成功&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">myAlert</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="退出登录" tabindex="-1"><a class="header-anchor" href="#退出登录" aria-hidden="true">#</a> 退出登录</h2><h4 id="目标-12" tabindex="-1"><a class="header-anchor" href="#目标-12" aria-hidden="true">#</a> 目标</h4><p>完成退出登录效果</p><h4 id="步骤-13" tabindex="-1"><a class="header-anchor" href="#步骤-13" aria-hidden="true">#</a> 步骤</h4><ol><li>绑定点击事件</li><li>清空本地缓存，跳转到登录页面</li></ol><h4 id="代码实现-16" tabindex="-1"><a class="header-anchor" href="#代码实现-16" aria-hidden="true">#</a> 代码实现</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// utils/auth.js</span>

document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.quit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;../login/index.html&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,161),i=[c];function l(u,r){return s(),a("div",null,i)}const v=n(o,[["render",l],["__file","黑马头条数据管理平台.html.vue"]]);export{v as default};
