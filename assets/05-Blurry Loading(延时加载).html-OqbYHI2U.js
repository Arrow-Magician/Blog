import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-NcYMie7E.js";const p="/Blog/assets/image-20240312175514752-aPewiJ5p.png",e={},o=t('<h1 id="_05-blurry-loading-延时加载" tabindex="-1"><a class="header-anchor" href="#_05-blurry-loading-延时加载" aria-hidden="true">#</a> 05-Blurry Loading(延时加载)</h1><h2 id="效果" tabindex="-1"><a class="header-anchor" href="#效果" aria-hidden="true">#</a> 效果</h2><p><img src="'+p+`" alt="image-20240312175514752" loading="lazy"></p><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style.css<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loading-text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>0%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./script.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">body</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.bg</span> <span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;https://images.unsplash.com/photo-1576161787924-01bb08dad4a4?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=2104&amp;q=80s&#39;</span><span class="token punctuation">)</span></span>
    no-repeat center center/cover<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> -30px<span class="token punctuation">;</span>
  <span class="token property">left</span><span class="token punctuation">:</span> -30px<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100vw + 60px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100vh + 60px<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> -1<span class="token punctuation">;</span>
  <span class="token comment">/* 高斯模糊效果 */</span>
  <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.loading-text</span> <span class="token punctuation">{</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> loadingText <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.loading-text&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> bg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.bg&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> load <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>blurring<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">blurring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  load<span class="token operator">++</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>load <span class="token operator">&gt;</span> <span class="token number">99</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  loadingText<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>load<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span>
  loadingText<span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token function">scale</span><span class="token punctuation">(</span>load<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  bg<span class="token punctuation">.</span>style<span class="token punctuation">.</span>filter <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">blur(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">scale</span><span class="token punctuation">(</span>load<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">scale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> in_min<span class="token punctuation">,</span> in_max<span class="token punctuation">,</span> out_min<span class="token punctuation">,</span> out_max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>num <span class="token operator">-</span> in_min<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>out_max <span class="token operator">-</span> out_min<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>in_max <span class="token operator">-</span> in_min<span class="token punctuation">)</span> <span class="token operator">+</span> out_min
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解析" tabindex="-1"><a class="header-anchor" href="#解析" aria-hidden="true">#</a> 解析</h2><h3 id="scale函数的作用" tabindex="-1"><a class="header-anchor" href="#scale函数的作用" aria-hidden="true">#</a> scale函数的作用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">scale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> in_min<span class="token punctuation">,</span> in_max<span class="token punctuation">,</span> out_min<span class="token punctuation">,</span> out_max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>num <span class="token operator">-</span> in_min<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>out_max <span class="token operator">-</span> out_min<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>in_max <span class="token operator">-</span> in_min<span class="token punctuation">)</span> <span class="token operator">+</span> out_min
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个函数用于将一个数值从一个范围线性地映射到另一个范围。即，把数字的透明度与背景中的高斯模糊以一个线性的方式或变清晰或变模糊。</p><h4 id="什么是线性映射" tabindex="-1"><a class="header-anchor" href="#什么是线性映射" aria-hidden="true">#</a> 什么是线性映射？</h4><p>我们可以想象有一把尺子，上面刻着从0到100的刻度。现在把这个尺子的刻度转换成一个新的尺子，上面只有从0到1的刻度。该怎么做呢？</p><p>线性映射就是这样一个转换过程。它就像是把原来的尺子“压缩”或者“拉长”成一个新的尺子。在这个过程中，每个刻度都按照同样的比例移动。</p><p>比如，原来的尺子上的50刻度，在新的尺子上会变成多少呢？因为50是原来尺子的一半（因为100的一半是50），所以在新尺子上，它也会是一半，也就是0.5。</p><p>同样地，原来的尺子上的25刻度，在新尺子上会变成0.25（因为25是100的四分之一），而75刻度会变成0.75（因为75是100的四分之三）。</p><h4 id="函数解析" tabindex="-1"><a class="header-anchor" href="#函数解析" aria-hidden="true">#</a> 函数解析</h4><p>函数接受五个参数：</p><ul><li><code>num</code>：要映射的原始数值。</li><li><code>in_min</code> 和 <code>in_max</code>：原始数值的范围（即<code>num</code>所在的范围）。</li><li><code>out_min</code> 和 <code>out_max</code>：映射后的目标范围。</li></ul><p>以下是其数学表达式的逐步解释：</p><ol><li><code>num - in_min</code>：首先，从原始数值中减去其范围的最小值，得到该数值在原始范围内的相对位置。</li><li><code>(out_max - out_min)</code>：计算目标范围的大小。</li><li><code>(num - in_min) * (out_max - out_min) / (in_max - in_min)</code>：这里将相对位置与目标范围的大小相乘，并除以原始范围的大小，得到在目标范围内的相对位置。</li><li><code>+ out_min</code>：最后，加上目标范围的最小值，得到映射后的数值。</li></ol><p>还是以上面的尺子为例子：</p><ol><li><code>num - in_min</code>：这个操作是在找出 <code>num</code> 在第一把尺子上的相对位置。比如，如果 <code>num</code> 是50，而 <code>in_min</code> 是0，那么 <code>num - in_min</code> 就是50，表示50在第一把尺子上是从起点开始的第50个单位。</li><li><code>(out_max - out_min)</code>：这个操作是计算第二把尺子的总长度，即从0到1的长度，也就是1。</li><li><code>(num - in_min) * (out_max - out_min) / (in_max - in_min)</code>：这里，我们首先把 <code>num</code> 在第一把尺子上的相对位置（步骤1的结果）乘以第二把尺子的总长度（步骤2的结果），然后再除以第一把尺子的总长度（即100）。这个操作实际上是在按照第一把尺子和第二把尺子的比例关系，找出 <code>num</code> 在第二把尺子上的相对位置。</li><li><code>+ out_min</code>：最后，我们把这个相对位置加上第二把尺子的起点（也就是0），得到 <code>num</code> 在第二把尺子上的确切位置。</li></ol><p>那么，如果我们想知道第一把尺子上的50刻度在第二把尺子上是多少，我们可以这样计算：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min

scale(50, 0, 100, 0, 1) = ((50 - 0) * (1 - 0)) / (100 - 0) + 0  
                        = (50 * 1) / 100 + 0  
                        = 50 / 100  
                        = 0.5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以，第一把尺子上的50刻度在第二把尺子上对应的是0.5刻度。</p>`,26),c=[o];function i(l,u){return s(),a("div",null,c)}const k=n(e,[["render",i],["__file","05-Blurry Loading(延时加载).html.vue"]]);export{k as default};
