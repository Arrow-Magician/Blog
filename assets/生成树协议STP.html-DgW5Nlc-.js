import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as n,a as s,b as t,d as r,e as o,r as p,o as d}from"./app-BMPm3d_6.js";const h={};function c(g,e){const a=p("RouteLink");return d(),i("div",null,[e[2]||(e[2]=n('<h1 id="生成树协议stp" tabindex="-1"><a class="header-anchor" href="#生成树协议stp"><span>生成树协议STP</span></a></h1><h2 id="能干什么" tabindex="-1"><a class="header-anchor" href="#能干什么"><span>能干什么</span></a></h2><p>解决二层网络出现的物理环路。交换机会产生广播风暴，此时通过STP可以选举出阻塞端口来逻辑断开端口。</p><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><h3 id="一、生成树端口状态" tabindex="-1"><a class="header-anchor" href="#一、生成树端口状态"><span>一、生成树端口状态</span></a></h3><ol><li>断开状态（Disable）：不收发BPDU</li><li>监听状态（Listening）：不学习MAC，等待15s</li><li>学习状态（Learning）：学习MAC，等待15s</li><li>转发状态（Forwarding）：转发数据业务</li><li>阻塞状态（Blocking）：阻塞端口</li></ol><div class="hint-container warning"><p class="hint-container-title">注意</p><p>生成树计算最短时间为30s，最长时间为50s</p></div><h3 id="二、生成树选举使用bpdu报文" tabindex="-1"><a class="header-anchor" href="#二、生成树选举使用bpdu报文"><span>二、生成树选举使用BPDU报文</span></a></h3><ol><li>桥ID（BID）：由本地交换机的优先级和MAC组成</li><li>根桥ID（RID）：选举一个交换机为根桥</li><li>端口ID（PID）：由交换机端口的优先级和端口编号组成</li><li>cost值：根据交换机接口带宽计算出的开销值</li></ol><h3 id="三、生成树开销值" tabindex="-1"><a class="header-anchor" href="#三、生成树开销值"><span>三、生成树开销值</span></a></h3><table><thead><tr><th style="text-align:center;">端口速率</th><th style="text-align:center;">路径开销（IEEE 802.1t标准）</th></tr></thead><tbody><tr><td style="text-align:center;">10Mbit/s</td><td style="text-align:center;">2000000</td></tr><tr><td style="text-align:center;">200Mbit/s</td><td style="text-align:center;">200000</td></tr><tr><td style="text-align:center;">1Gbit/s</td><td style="text-align:center;">20000</td></tr><tr><td style="text-align:center;">10Gbit/s</td><td style="text-align:center;">2000</td></tr></tbody></table><h3 id="四、生成树选举基本原则" tabindex="-1"><a class="header-anchor" href="#四、生成树选举基本原则"><span>四、生成树选举基本原则</span></a></h3><ol><li><p>根桥所有接口为指定端口（DP）</p></li><li><p>每个非根桥选举，一个根端口 （RP）</p></li><li><p>每段链路选举，一个指定端口（DP）</p></li><li><p>没有被选举的，一个端口为阻塞端口（AP）</p></li></ol><h3 id="五、生成树选举过程" tabindex="-1"><a class="header-anchor" href="#五、生成树选举过程"><span>五、生成树选举过程</span></a></h3><h4 id="步骤1" tabindex="-1"><a class="header-anchor" href="#步骤1"><span>步骤1：</span></a></h4><p>选举根桥ID： BID小的优先成为根桥 <mark>（先选优先级小的，相同优先级，再选MAC小的）</mark></p><h4 id="步骤2-选举根端口" tabindex="-1"><a class="header-anchor" href="#步骤2-选举根端口"><span>步骤2：选举根端口</span></a></h4><ol><li><p>端口到根桥的每段链路cost累加值小的</p></li><li><p>对端BID小的，本端对应端口优先成为根端口</p></li><li><p>对端PID小的，本端对应端口优先成为根端口</p></li></ol><h4 id="步骤3-选举指定端口" tabindex="-1"><a class="header-anchor" href="#步骤3-选举指定端口"><span>步骤3：选举指定端口</span></a></h4><ol><li><p>端口到根桥的每段链路cost累加值小的</p></li><li><p>本端BID小的，端口优先成为指定端口</p></li></ol><h2 id="快速生成树协议rstp" tabindex="-1"><a class="header-anchor" href="#快速生成树协议rstp"><span>快速生成树协议RSTP</span></a></h2><p>快速生成树RSTP由标准的STP改进而来，收敛时间属于毫秒级。</p><h2 id="多实例生成树mstp" tabindex="-1"><a class="header-anchor" href="#多实例生成树mstp"><span>多实例生成树MSTP</span></a></h2><p>MSTP多实例生成树是RSTP的升级，有效解决负载均衡问题。</p><h2 id="华为配置" tabindex="-1"><a class="header-anchor" href="#华为配置"><span>华为配置</span></a></h2>',25)),s("p",null,[e[1]||(e[1]=t("具体可以点击这里查看")),r(a,{to:"/notes/web/huawei/%E4%B8%89%E3%80%81%E7%94%9F%E6%88%90%E6%A0%91%E5%AE%9E%E4%BE%8B&%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88.html"},{default:o(()=>e[0]||(e[0]=[t("实验操作")])),_:1})])])}const b=l(h,[["render",c],["__file","生成树协议STP.html.vue"]]),P=JSON.parse('{"path":"/notes/web/knowledge_points/%E5%B1%80%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AESTP.html","title":"生成树协议STP","lang":"zh-CN","frontmatter":{"order":3,"description":"生成树协议STP 能干什么 解决二层网络出现的物理环路。交换机会产生广播风暴，此时通过STP可以选举出阻塞端口来逻辑断开端口。 步骤 一、生成树端口状态 断开状态（Disable）：不收发BPDU 监听状态（Listening）：不学习MAC，等待15s 学习状态（Learning）：学习MAC，等待15s 转发状态（Forwarding）：转发数据业...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Blog/notes/web/knowledge_points/%E5%B1%80%E5%9F%9F%E7%BD%91%E6%8A%80%E6%9C%AF/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AESTP.html"}],["meta",{"property":"og:site_name","content":"A.M. Blog"}],["meta",{"property":"og:title","content":"生成树协议STP"}],["meta",{"property":"og:description","content":"生成树协议STP 能干什么 解决二层网络出现的物理环路。交换机会产生广播风暴，此时通过STP可以选举出阻塞端口来逻辑断开端口。 步骤 一、生成树端口状态 断开状态（Disable）：不收发BPDU 监听状态（Listening）：不学习MAC，等待15s 学习状态（Learning）：学习MAC，等待15s 转发状态（Forwarding）：转发数据业..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-08T13:51:43.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-08T13:51:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生成树协议STP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-08T13:51:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Arrow Magician\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"能干什么","slug":"能干什么","link":"#能干什么","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[{"level":3,"title":"一、生成树端口状态","slug":"一、生成树端口状态","link":"#一、生成树端口状态","children":[]},{"level":3,"title":"二、生成树选举使用BPDU报文","slug":"二、生成树选举使用bpdu报文","link":"#二、生成树选举使用bpdu报文","children":[]},{"level":3,"title":"三、生成树开销值","slug":"三、生成树开销值","link":"#三、生成树开销值","children":[]},{"level":3,"title":"四、生成树选举基本原则","slug":"四、生成树选举基本原则","link":"#四、生成树选举基本原则","children":[]},{"level":3,"title":"五、生成树选举过程","slug":"五、生成树选举过程","link":"#五、生成树选举过程","children":[]}]},{"level":2,"title":"快速生成树协议RSTP","slug":"快速生成树协议rstp","link":"#快速生成树协议rstp","children":[]},{"level":2,"title":"多实例生成树MSTP","slug":"多实例生成树mstp","link":"#多实例生成树mstp","children":[]},{"level":2,"title":"华为配置","slug":"华为配置","link":"#华为配置","children":[]}],"git":{"createdTime":1731073903000,"updatedTime":1731073903000,"contributors":[{"name":"Arrow-Magician","email":"315903697@qq.com","commits":1}]},"readingTime":{"minutes":1.87,"words":561},"filePathRelative":"notes/web/knowledge_points/局域网技术/生成树协议STP.md","localizedDate":"2024年11月8日","autoDesc":true}');export{b as comp,P as data};
